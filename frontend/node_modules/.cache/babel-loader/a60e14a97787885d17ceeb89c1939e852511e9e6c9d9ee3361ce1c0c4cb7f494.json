{"ast":null,"code":"var _jsxFileName = \"D:\\\\a4\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// skillbridge-chatbot/frontend/src/App.js\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:8000/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: userMessage.text\n        })\n      });\n      const result = await response.json();\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: result.response\n      }]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Error talking to backend.\"\n      }]);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"SkillBridge AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender}`,\n          children: msg.text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot\",\n          children: \"Typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n          placeholder: \"Ask me something...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4bfI0gkk1w7TOu/oiFMuYSRPMyI=\");\n_c = App;\nexport default App;\n\n// // skillbridge-chatbot/frontend/src/App.css\n\n// // skillbridge-chatbot/frontend/package.json\n\n// import React from 'react';\n\n// function App() {\n//   return (\n//     <div>\n//       <h1>SkillBridge Chatbot</h1>\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","loading","setLoading","sendMessage","trim","userMessage","sender","text","prev","response","fetch","method","headers","body","JSON","stringify","message","result","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","value","onChange","e","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/a4/frontend/src/App.js"],"sourcesContent":["// skillbridge-chatbot/frontend/src/App.js\r\nimport React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n    const userMessage = { sender: \"user\", text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setInput(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/ask\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: userMessage.text })\r\n      });\r\n      const result = await response.json();\r\n      setMessages((prev) => [...prev, { sender: \"bot\", text: result.response }]);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setMessages((prev) => [...prev, { sender: \"bot\", text: \"Error talking to backend.\" }]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"chat-window\">\r\n        <div className=\"chat-header\">SkillBridge AI Assistant</div>\r\n        <div className=\"chat-body\">\r\n          {messages.map((msg, i) => (\r\n            <div key={i} className={`message ${msg.sender}`}>\r\n              {msg.text}\r\n            </div>\r\n          ))}\r\n          {loading && <div className=\"message bot\">Typing...</div>}\r\n        </div>\r\n        <div className=\"chat-footer\">\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n            placeholder=\"Ask me something...\"\r\n          />\r\n          <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// // skillbridge-chatbot/frontend/src/App.css\r\n\r\n// // skillbridge-chatbot/frontend/package.json\r\n\r\n// import React from 'react';\r\n\r\n// function App() {\r\n//   return (\r\n//     <div>\r\n//       <h1>SkillBridge Chatbot</h1>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}