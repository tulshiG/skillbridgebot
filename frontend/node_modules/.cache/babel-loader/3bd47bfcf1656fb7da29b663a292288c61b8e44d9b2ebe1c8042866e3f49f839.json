{"ast":null,"code":"var _jsxFileName = \"D:\\\\a4\\\\frontend\\\\src\\\\App.js\";\n// // skillbridge-chatbot/frontend/src/App.js\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   const [input, setInput] = useState(\"\");\n//   const [messages, setMessages] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   const sendMessage = async () => {\n//     if (!input.trim()) return;\n//     const userMessage = { sender: \"user\", text: input };\n//     setMessages((prev) => [...prev, userMessage]);\n//     setInput(\"\");\n//     setLoading(true);\n\n//     try {\n//       const response = await fetch(\"http://localhost:8000/ask\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ message: userMessage.text })\n//       });\n//       const result = await response.json();\n//       setMessages((prev) => [...prev, { sender: \"bot\", text: result.response }]);\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       setMessages((prev) => [...prev, { sender: \"bot\", text: \"Error talking to backend.\" }]);\n//     }\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div className=\"app\">\n//       <div className=\"chat-window\">\n//         <div className=\"chat-header\">SkillBridge AI Assistant</div>\n//         <div className=\"chat-body\">\n//           {messages.map((msg, i) => (\n//             <div key={i} className={`message ${msg.sender}`}>\n//               {msg.text}\n//             </div>\n//           ))}\n//           {loading && <div className=\"message bot\">Typing...</div>}\n//         </div>\n//         <div className=\"chat-footer\">\n//           <input\n//             value={input}\n//             onChange={(e) => setInput(e.target.value)}\n//             onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n//             placeholder=\"Ask me something...\"\n//           />\n//           <button onClick={sendMessage}>Send</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// // skillbridge-chatbot/frontend/src/App.css\n\n// // skillbridge-chatbot/frontend/package.json\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SkillBridge Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/a4/frontend/src/App.js"],"sourcesContent":["// // skillbridge-chatbot/frontend/src/App.js\r\n// import React, { useState } from \"react\";\r\n// import \"./App.css\";\r\n\r\n// function App() {\r\n//   const [input, setInput] = useState(\"\");\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const sendMessage = async () => {\r\n//     if (!input.trim()) return;\r\n//     const userMessage = { sender: \"user\", text: input };\r\n//     setMessages((prev) => [...prev, userMessage]);\r\n//     setInput(\"\");\r\n//     setLoading(true);\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8000/ask\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ message: userMessage.text })\r\n//       });\r\n//       const result = await response.json();\r\n//       setMessages((prev) => [...prev, { sender: \"bot\", text: result.response }]);\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       setMessages((prev) => [...prev, { sender: \"bot\", text: \"Error talking to backend.\" }]);\r\n//     }\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"app\">\r\n//       <div className=\"chat-window\">\r\n//         <div className=\"chat-header\">SkillBridge AI Assistant</div>\r\n//         <div className=\"chat-body\">\r\n//           {messages.map((msg, i) => (\r\n//             <div key={i} className={`message ${msg.sender}`}>\r\n//               {msg.text}\r\n//             </div>\r\n//           ))}\r\n//           {loading && <div className=\"message bot\">Typing...</div>}\r\n//         </div>\r\n//         <div className=\"chat-footer\">\r\n//           <input\r\n//             value={input}\r\n//             onChange={(e) => setInput(e.target.value)}\r\n//             onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n//             placeholder=\"Ask me something...\"\r\n//           />\r\n//           <button onClick={sendMessage}>Send</button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n// // skillbridge-chatbot/frontend/src/App.css\r\n\r\n// // skillbridge-chatbot/frontend/package.json\r\n\r\nimport React from 'react';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <h1>SkillBridge Chatbot</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAACC,EAAA,GANQN,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}